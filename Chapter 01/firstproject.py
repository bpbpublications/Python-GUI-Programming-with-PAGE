#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7x
#  in conjunction with Tcl version 8.6
#    Oct 15, 2021 03:33:01 AM CDT  platform: Linux

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import firstproject_support

class Firstproject:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("600x450+881+376")
        top.minsize(1, 1)
        top.maxsize(4225, 1410)
        top.resizable(0,  0)
        top.title("Toplevel 1")

        self.top = top
        self.DynamicLabelText = tk.StringVar()
        self.EntryData = tk.StringVar()
        self.RbSelectDisplay = tk.StringVar()
        self.selectedButton = tk.IntVar()

        self.btnExit = tk.Button(self.top)
        self.btnExit.place(x=480, y=10, height=33, width=83)
        self.btnExit.configure(borderwidth="2")
        self.btnExit.configure(command=firstproject_support.on_btnExit)
        self.btnExit.configure(text='''Exit''')

        self.lblStatic = tk.Label(self.top)
        self.lblStatic.place(x=150, y=50, height=21, width=229)
        self.lblStatic.configure(text='''This is a STATIC Label''')

        self.lblDynamic = tk.Label(self.top)
        self.lblDynamic.place(x=120, y=100, height=29, width=346)
        self.lblDynamic.configure(relief="sunken")
        self.lblDynamic.configure(text='''Label''')
        self.lblDynamic.configure(textvariable=self.DynamicLabelText)

        self.Entry1 = tk.Entry(self.top)
        self.Entry1.place(x=90, y=190, height=23, width=256)
        self.Entry1.configure(background="white")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(textvariable=self.EntryData)

        self.btnGrabEntry = tk.Button(self.top)
        self.btnGrabEntry.place(x=360, y=185, height=29, width=94)
        self.btnGrabEntry.configure(borderwidth="2")
        self.btnGrabEntry.configure(command=firstproject_support.on_btnGrabEntry)
        self.btnGrabEntry.configure(text='''Grab Entry''')

        self.Frame1 = tk.Frame(self.top)
        self.Frame1.place(x=70, y=260, height=155, width=235)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")

        self.lblRbQuestion = tk.Label(self.Frame1)
        self.lblRbQuestion.place(x=10, y=10, height=21, width=206)
        self.lblRbQuestion.configure(anchor='w')
        self.lblRbQuestion.configure(text='''Do You Like Mushrooms?''')

        self.RadiobuttonNo = tk.Radiobutton(self.Frame1)
        self.RadiobuttonNo.place(x=30, y=43, height=23, width=152)
        self.RadiobuttonNo.configure(anchor='w')
        self.RadiobuttonNo.configure(command=firstproject_support.on_rbClick)
        self.RadiobuttonNo.configure(justify='left')
        self.RadiobuttonNo.configure(text='''NO''')
        self.RadiobuttonNo.configure(value='0')
        self.RadiobuttonNo.configure(variable=self.selectedButton)

        self.RadiobuttonYes = tk.Radiobutton(self.Frame1)
        self.RadiobuttonYes.place(x=30, y=70, height=23, width=152)
        self.RadiobuttonYes.configure(anchor='w')
        self.RadiobuttonYes.configure(command=firstproject_support.on_rbClick)
        self.RadiobuttonYes.configure(justify='left')
        self.RadiobuttonYes.configure(text='''YES''')
        self.RadiobuttonYes.configure(value='1')
        self.RadiobuttonYes.configure(variable=self.selectedButton)

        self.lblRbResponse = tk.Label(self.Frame1)
        self.lblRbResponse.place(x=20, y=110, height=29, width=196)
        self.lblRbResponse.configure(relief="ridge")
        self.lblRbResponse.configure(text='''Label''')
        self.lblRbResponse.configure(textvariable=self.RbSelectDisplay)

def start_up():
    firstproject_support.main()

if __name__ == '__main__':
    firstproject_support.main()




