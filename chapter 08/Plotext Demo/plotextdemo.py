#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Dec 22, 2022 04:11:00 AM CST  platform: Linux

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_script = sys.argv[0]
_location = os.path.dirname(_script)

import plotextdemo_support

_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = 'gray40' # X11 color: #666666
_ana1color = '#c3c3c3' # Closest X11 color: 'gray76'
_ana2color = 'beige' # X11 color: #f5f5dc
_tabfg1 = 'black' 
_tabfg2 = 'black' 
_tabbg1 = 'grey75' 
_tabbg2 = 'grey89' 
_bgmode = 'light' 

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran:
       return
    style = ttk.Style()
    if sys.platform == "win32":
       style.theme_use('winnative')
    style.configure('.',background=_bgcolor)
    style.configure('.',foreground=_fgcolor)
    style.configure('.',font='TkDefaultFont')
    style.map('.',background =
       [('selected', _compcolor), ('active',_ana2color)])
    if _bgmode == 'dark':
       style.map('.',foreground =
         [('selected', 'white'), ('active','white')])
    else:
       style.map('.',foreground =
         [('selected', 'black'), ('active','black')])
    _style_code_ran = 1

class Main:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("843x705+769+399")
        top.minsize(1, 1)
        top.maxsize(4225, 1410)
        top.resizable(0,  0)
        top.title("Plotext Demo")
        top.configure(background="springgreen3")

        self.top = top
        self.comboMarker = tk.StringVar()
        self.comboPlotType = tk.StringVar()
        self.PlotData = tk.StringVar()

        self.btnExit = tk.Button(self.top)
        self.btnExit.place(x=710, y=20, height=33, width=93)
        self.btnExit.configure(activebackground="beige")
        self.btnExit.configure(borderwidth="2")
        self.btnExit.configure(command=plotextdemo_support.on_btnExit)
        self.btnExit.configure(compound='left')
        self.btnExit.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        self.btnExit.configure(text='''Exit''')
        _style_code()
        self.TCombobox1 = ttk.Combobox(self.top)
        self.TCombobox1.place(x=30, y=80, height=21, width=177)
        self.TCombobox1.configure(textvariable=self.comboMarker)
        self.TCombobox1.configure(takefocus="")
        self.TCombobox2 = ttk.Combobox(self.top)
        self.TCombobox2.place(x=260, y=80, height=21, width=177)
        self.TCombobox2.configure(textvariable=self.comboPlotType)
        self.TCombobox2.configure(takefocus="")
        self.Label1 = tk.Label(self.top)
        self.Label1.place(x=40, y=50, height=21, width=139)
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="springgreen3")
        self.Label1.configure(compound='left')
        self.Label1.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        self.Label1.configure(text='''Marker Type''')
        self.Label2 = tk.Label(self.top)
        self.Label2.place(x=260, y=50, height=21, width=149)
        self.Label2.configure(anchor='w')
        self.Label2.configure(background="springgreen3")
        self.Label2.configure(compound='left')
        self.Label2.configure(font="-family {DejaVu Sans} -size 10 -weight bold")
        self.Label2.configure(text='''Plot type''')
        self.Label3 = tk.Label(self.top)
        self.Label3.place(x=10, y=130, height=561, width=819)
        self.Label3.configure(anchor='w')
        self.Label3.configure(background="seagreen3")
        self.Label3.configure(borderwidth="3")
        self.Label3.configure(compound='left')
        self.Label3.configure(font="-family {DejaVu Sans Mono} -size 8")
        self.Label3.configure(relief="sunken")
        self.Label3.configure(text='''Label''')
        self.Label3.configure(textvariable=self.PlotData)
        self.PlotData.set('''Label''')

def start_up():
    plotextdemo_support.main()

if __name__ == '__main__':
    plotextdemo_support.main()




